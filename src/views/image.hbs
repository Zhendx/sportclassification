{{> nav/navigation}}    
<form action="/upload" method="POST" enctype="multipart/form-data">
    <div class="row mb-2 mt-2">
        <div class="col-3"></div>
        <div class="col-4">
            <input class="form-control" type="file" id="formFile" name="image" id="image">
        </div>
        <div class="col-1">
            <button type="submit" class="btn btn-secondary" name="predict">
                Guardar
            </button>
        </div>
    </div>
    
</form>
<div class="col-12 col-md-4 offset-md-4 text-center">
    <button id="pred" class="btn btn-success" type="button" onclick="predecir();">
        Predecir
    </button>
    <br>
    <canvas id="canvas" class="mt-2" width="400" height="400" style="max-width: 100%"></canvas>
    <canvas id="othercanvas" width="150" height="150" style="display: none;"></canvas>            
    <div id="resultado"></div>               
</div>

<script type="text/javascript">
    //////////////////////Script de imagen///////////////////////
    var modelo = null;
    (async () => {
        console.log("Cargando modelo...");
        modelo = await tf.loadLayersModel("ent/model.json");
        console.log("Modelo cargado...");        
    })();    

    var canvas = document.getElementById("canvas");
    var ctx = canvas.getContext("2d");    

    var img1 = new Image();    
    img1.src = "uploads/imgTest.jpg";

    img1.onload = function(){        
        ctx.drawImage(img1, 0, 0, 400, 400);        
    }

    function predecir() {
        if (modelo != null) {
            //Redimensi√≥n del canvas 150x150
            resample_single(canvas, 150, 150, othercanvas);
            var ctx2 = othercanvas.getContext("2d");

            var imgData = ctx2.getImageData(0, 0, 150, 150);
            var arr = [];
            var arr150 = [];
            for (var p = 0, i = 0; p < imgData.data.length; p += 4) {
                var red = imgData.data[p] / 255;
                var green = imgData.data[p + 1] / 255;
                var blue = imgData.data[p + 2] / 255;
                arr150.push([red, green, blue]);
                if (arr150.length == 150) {
                    arr.push(arr150);
                    arr150 = [];
                }
            }

            arr = [arr];
            console.log(arr);

            var tensor4 = tf.tensor4d(arr);
            var resultados = modelo.predict(tensor4).dataSync();
            
            var mayorIndice = resultados.indexOf(
                Math.max.apply(null, resultados)
            );
            var clases = ["Baseball", "BasketBall", "Boxeo", "Football", "Formula 1", "Golf", "Motorcycle Racing" ,"Natacion", "Tennis", "Volleyball"];

            document.getElementById("resultado").innerHTML = clases[mayorIndice];
        }
    }    

    function resample_single(canvas, width, height, resize_canvas) {
        var width_source = canvas.width;
        var height_source = canvas.height;
        width = Math.round(width);
        height = Math.round(height);

        var ratio_w = width_source / width;
        var ratio_h = height_source / height;
        var ratio_w_half = Math.ceil(ratio_w / 2);
        var ratio_h_half = Math.ceil(ratio_h / 2);

        var ctx = canvas.getContext("2d");
        var ctx2 = resize_canvas.getContext("2d");
        var img = ctx.getImageData(0, 0, width_source, height_source);
        var img2 = ctx2.createImageData(width, height);
        var data = img.data;
        var data2 = img2.data;

        for (var j = 0; j < height; j++) {
            for (var i = 0; i < width; i++) {
                var x2 = (i + j * width) * 4;
                var weight = 0;
                var weights = 0;
                var weights_alpha = 0;
                var gx_r = 0;
                var gx_g = 0;
                var gx_b = 0;
                var gx_a = 0;
                var center_y = (j + 0.5) * ratio_h;
                var yy_start = Math.floor(j * ratio_h);
                var yy_stop = Math.ceil((j + 1) * ratio_h);
                for (var yy = yy_start; yy < yy_stop; yy++) {
                    var dy = Math.abs(center_y - (yy + 0.5)) / ratio_h_half;
                    var center_x = (i + 0.5) * ratio_w;
                    var w0 = dy * dy;
                    var xx_start = Math.floor(i * ratio_w);
                    var xx_stop = Math.ceil((i + 1) * ratio_w);
                    for (var xx = xx_start; xx < xx_stop; xx++) {
                        var dx = Math.abs(center_x - (xx + 0.5)) / ratio_w_half;
                        var w = Math.sqrt(w0 + dx * dx);
                        if (w >= 1) {
                            continue;
                        }
                        weight = 2 * w * w * w - 3 * w * w + 1;
                        var pos_x = 4 * (xx + yy * width_source);
                        gx_a += weight * data[pos_x + 3];
                        weights_alpha += weight;
                        if (data[pos_x + 3] < 255)
                            weight = (weight * data[pos_x + 3]) / 250;
                        gx_r += weight * data[pos_x];
                        gx_g += weight * data[pos_x + 1];
                        gx_b += weight * data[pos_x + 2];
                        weights += weight;
                    }
                }
                data2[x2] = gx_r / weights;
                data2[x2 + 1] = gx_g / weights;
                data2[x2 + 2] = gx_b / weights;
                data2[x2 + 3] = gx_a / weights_alpha;
            }
        }
        ctx2.putImageData(img2, 0, 0);
    }   
</script>